---
- name: Assert usage of systemd as an init system
  assert:
    that: ansible_service_mgr == 'systemd'
    msg: "This role only works with systemd"

- name: Get systemd version
  command: systemctl --version
  changed_when: false
  check_mode: false
  register: __systemd_version
  tags:
    - skip_ansible_lint

- name: Set systemd version fact
  set_fact:
    prometheus_msteams_systemd_version: "{{ __systemd_version.stdout_lines[0] | regex_replace('^systemd\\s(\\d+).*$', '\\1') }}"

- block:
    - name: Get latest release
      uri:
        url: "https://api.github.com/repos/prometheus-msteams/prometheus-msteams/releases/latest"
        method: GET
        return_content: true
        status_code: 200
        body_format: json
        user: "{{ lookup('env', 'GH_USER') | default(omit) }}"
        password: "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"
      no_log: "{{ not lookup('env', 'MOLECULE_DEBUG') | bool }}"
      register: _latest_release
      until: _latest_release.status == 200
      retries: 5

    - name: "Set prometheus-msteams version to {{ _latest_release.json.tag_name[1:] }}"
      set_fact:
        prometheus_msteams_version: "{{ _latest_release.json.tag_name[1:] }}"
  when:
    - prometheus_msteams_version == "latest"
    - prometheus_msteams_binary_local_dir | length == 0

- block:
    - name: Get checksum list from github
      set_fact:
        _checksums: "{{ lookup('url', 'https://github.com/prometheus-msteams/prometheus-msteams/releases/download/v' + prometheus_msteams_version + '/shasum256.txt', wantlist=True) | list }}"
      run_once: true
    - name: "Get checksum for linux-amd64 architecture"
      set_fact:
        prometheus_msteams_checksum: "{{ item.split(' ')[0] }}"
      with_items: "{{ _checksums }}"
      when:
        - "('prometheus-msteams-linux-amd64') in item"
  delegate_to: localhost
  when: prometheus_msteams_binary_local_dir | length == 0

- name: Fail when prometheus_msteams_channels not defined
  fail:
    msg: >
      prometheus_msteams_channels not defined
  when:
    - prometheus_msteams_channels == []
